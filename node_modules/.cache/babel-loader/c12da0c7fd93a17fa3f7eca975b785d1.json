{"ast":null,"code":"var _jsxFileName = \"/home/rodrigo/rodrigoDeSouzaFernandes/projetos-pessoais/processo-seletivo-moodar/src/components/Board/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { getMatrixPosition, toLetter } from '../../utils/convert';\nimport resolveTour from '../../utils/resolveTour';\nimport { BoardBody, Square, Line, Knight } from './styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board() {\n  _s();\n\n  const makeBoard = Array(8).fill(Array(8).fill({\n    visited: false,\n    knight: false,\n    content: ''\n  }));\n  const [board, setBoard] = useState(makeBoard);\n  const [initialPosition, setInitialPosition] = useState();\n\n  const setKnight = (square, playing = false) => {\n    const [line, column] = square.split('-').map(Number);\n    const newBoard = board.map((row, l) => row.map((col, c) => {\n      console.log('cliquem em', line, column, 'é igual a', l, c, l == line, column == c);\n\n      if (l == line && column == c) {\n        console.log('ENTREEEI NO IF');\n        if (playing) return {\n          knight: true,\n          visited: true,\n          content: 'x'\n        };else return { ...col,\n          knight: true\n        };\n      }\n\n      return { ...col,\n        knight: false\n      };\n    }));\n    setInitialPosition({\n      line,\n      column\n    });\n    setBoard(newBoard);\n  };\n\n  const play = ({\n    line,\n    column\n  }) => {\n    const initSquare = `${toLetter(column)}${line + 1}`;\n    const result = resolveTour(initSquare).map(getMatrixPosition);\n    result.forEach(elem => {\n      setTimeout(() => {\n        setKnight(elem, true);\n      }, 2000);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(BoardBody, {\n    children: [board.map((line, l) => /*#__PURE__*/_jsxDEV(Line, {\n      children: line.map(({\n        knight,\n        content\n      }, c) => !knight ? /*#__PURE__*/_jsxDEV(Square, {\n        id: `${l}-${c}`,\n        onClick: ({\n          target: {\n            id\n          }\n        }) => setKnight(id),\n        children: content\n      }, `square ${(l, c)}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Knight, {\n        id: `${l}-${c}`\n      }, `square ${(l, c)}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this))\n    }, `linha ${l}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => play(initialPosition),\n      children: \"play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"99EgjwDV09AnQcHKHnftivKkPko=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/home/rodrigo/rodrigoDeSouzaFernandes/projetos-pessoais/processo-seletivo-moodar/src/components/Board/index.js"],"names":["React","useState","getMatrixPosition","toLetter","resolveTour","BoardBody","Square","Line","Knight","Board","makeBoard","Array","fill","visited","knight","content","board","setBoard","initialPosition","setInitialPosition","setKnight","square","playing","line","column","split","map","Number","newBoard","row","l","col","c","console","log","play","initSquare","result","forEach","elem","setTimeout","target","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { getMatrixPosition, toLetter } from '../../utils/convert';\nimport resolveTour from '../../utils/resolveTour';\n\nimport { BoardBody, Square, Line, Knight } from './styled'\n\n\nfunction Board() {\n  const makeBoard = Array(8).fill(Array(8).fill({visited: false, knight: false, content:''}))\n  const [board, setBoard] = useState(makeBoard);\n  const [initialPosition, setInitialPosition] = useState();\n\n  const setKnight = (square, playing = false) => {\n    const [line, column] = square.split('-').map(Number);\n    \n    const newBoard = board.map((row, l) => row\n    .map((col, c) => {\n      console.log('cliquem em',line, column, 'é igual a', l, c, l == line, column == c)\n      if (l == line && column == c) {\n        console.log('ENTREEEI NO IF')\n        if(playing) return {\n          knight: true,\n          visited: true,\n          content: 'x',\n        }\n        else return {\n          ...col,\n          knight: true,\n        }\n      }\n      return {\n        ...col,\n        knight: false,\n      }\n    }\n    ))\n    setInitialPosition({line, column})\n    setBoard(newBoard)\n  }\n\n  const play = ({line, column}) => {\n    const initSquare = `${toLetter(column)}${line + 1}`;\n\n    const result = resolveTour(initSquare).map(getMatrixPosition)\n    \n    result.forEach(elem => {\n      setTimeout(() => {\n        setKnight(elem, true)\n      }, 2000)\n    })\n  }\n\n  return (\n    <BoardBody >\n    {board.map((line, l) => (\n      <Line key={`linha ${l}`}>\n        {line.map(({knight, content}, c) => \n          !knight ? (\n            <Square\n              key={`square ${l, c}`}\n              id={`${l}-${c}`}\n              onClick={ ({target: {id}}) => setKnight(id) }\n            >\n              {content}\n            </Square>\n            ) : (\n            <Knight\n              key={`square ${l, c}`}\n              id={`${l}-${c}`}\n            />\n          ))}\n      </Line>))}\n      <button\n        onClick={ () => play(initialPosition) }\n      >\n        play\n      </button>\n      </BoardBody>\n  )\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}