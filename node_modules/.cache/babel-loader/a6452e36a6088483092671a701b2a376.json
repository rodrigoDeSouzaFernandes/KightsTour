{"ast":null,"code":"var _jsxFileName = \"/home/rodrigo/rodrigoDeSouzaFernandes/projetos-pessoais/processo-seletivo-moodar/src/components/Board/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { BoardBody, Square, Line, Knight } from './styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst makeBoard = Array(8).fill(Array(8).fill({\n  visited: false,\n  knight: false,\n  content: ''\n}));\n\nfunction Board() {\n  _s();\n\n  const [board, setBoard] = useState(makeBoard);\n\n  const setKnight = (line, column) => {\n    console.log(line, column);\n    const newBoard = board;\n    newBoard[line][column].knight === true;\n    setBoard(newBoard);\n  };\n\n  return /*#__PURE__*/_jsxDEV(BoardBody, {\n    children: board.map((line, l) => /*#__PURE__*/_jsxDEV(Line, {\n      children: line.map(({\n        knight,\n        content\n      }, c) => !knight ? /*#__PURE__*/_jsxDEV(Square, {\n        onClick: () => setKnight(l, c),\n        children: content\n      }, `square ${(l, c)}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Knight, {\n        children: content\n      }, `square ${(l, c)}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this))\n    }, `linha ${l}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"60QH0r7bDSEjL3Dhlm10DAlN0ck=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/home/rodrigo/rodrigoDeSouzaFernandes/projetos-pessoais/processo-seletivo-moodar/src/components/Board/index.js"],"names":["React","useState","BoardBody","Square","Line","Knight","makeBoard","Array","fill","visited","knight","content","Board","board","setBoard","setKnight","line","column","console","log","newBoard","map","l","c"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,IAA5B,EAAkCC,MAAlC,QAAgD,UAAhD;;AAEA,MAAMC,SAAS,GAAGC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAcD,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc;AAACC,EAAAA,OAAO,EAAE,KAAV;AAAiBC,EAAAA,MAAM,EAAE,KAAzB;AAAgCC,EAAAA,OAAO,EAAE;AAAzC,CAAd,CAAd,CAAlB;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAACK,SAAD,CAAlC;;AAEA,QAAMS,SAAS,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBC,MAAlB;AACA,UAAMG,QAAQ,GAAGP,KAAjB;AACAO,IAAAA,QAAQ,CAACJ,IAAD,CAAR,CAAeC,MAAf,EAAuBP,MAAvB,KAAkC,IAAlC;AACAI,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACD,GALD;;AAOA,sBACE,QAAC,SAAD;AAAA,cACCP,KAAK,CAACQ,GAAN,CAAU,CAACL,IAAD,EAAOM,CAAP,kBACT,QAAC,IAAD;AAAA,gBACGN,IAAI,CAACK,GAAL,CAAS,CAAC;AAACX,QAAAA,MAAD;AAASC,QAAAA;AAAT,OAAD,EAAoBY,CAApB,KACR,CAACb,MAAD,gBACE,QAAC,MAAD;AAEE,QAAA,OAAO,EAAG,MAAMK,SAAS,CAACO,CAAD,EAAIC,CAAJ,CAF3B;AAAA,kBAIGZ;AAJH,SACQ,UAAD,CAAUW,CAAC,EAAEC,CAAb,CAAe,EADtB;AAAA;AAAA;AAAA;AAAA,cADF,gBAQE,QAAC,MAAD;AAAA,kBAGGZ;AAHH,SACM,UAAD,CAAUW,CAAC,EAAEC,CAAb,CAAe,EADpB;AAAA;AAAA;AAAA;AAAA,cATH;AADH,OAAY,SAAQD,CAAE,EAAtB;AAAA;AAAA;AAAA;AAAA,YADD;AADD;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAhCQV,K;;KAAAA,K;AAkCT,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react'\n\nimport { BoardBody, Square, Line, Knight } from './styled'\n\nconst makeBoard = Array(8).fill(Array(8).fill({visited: false, knight: false, content: ''}))\n\nfunction Board() {\n  const [board, setBoard] = useState(makeBoard)\n\n  const setKnight = (line, column) => {\n    console.log(line, column)\n    const newBoard = board;\n    newBoard[line][column].knight === true;\n    setBoard(newBoard)\n  }\n\n  return (\n    <BoardBody >\n    {board.map((line, l) => (\n      <Line key={`linha ${l}`}>\n        {line.map(({knight, content}, c) => \n          !knight ? (\n            <Square\n              key={`square ${l, c}`}\n              onClick={ () => setKnight(l, c) }\n            >\n              {content}\n            </Square>\n            ) : (\n            <Knight\n            key={`square ${l, c}`}\n            >\n              {content}\n            </Knight>\n          ))}\n      </Line>))}\n    </BoardBody>\n  )\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}