{"ast":null,"code":"import _objectSpread from\"/home/rodrigo/rodrigoDeSouzaFernandes/projetos-pessoais/KightsTour/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/rodrigo/rodrigoDeSouzaFernandes/projetos-pessoais/KightsTour/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useCallback}from'react';import{getMatrixPosition,toLetter}from'../../utils/convert';import resolveTour from'../../utils/resolveTour';import{BoardBody,Square,Line,Knight,Move,Movements,Body,Columns,MovementsContainer,BtnPlay}from'./styled';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function Board(){var makeBoard=Array(8).fill(Array(8).fill({visited:false,knight:false,content:''}));var _useState=useState(makeBoard),_useState2=_slicedToArray(_useState,2),board=_useState2[0],setBoard=_useState2[1];var _useState3=useState({line:0,column:0}),_useState4=_slicedToArray(_useState3,2),initialPosition=_useState4[0],setInitialPosition=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),movements=_useState6[0],setMovements=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),playing=_useState8[0],setPlaying=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),reset=_useState10[0],setReset=_useState10[1];var setKnight=useCallback(function(square){var content=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'x';var _square$split$map=square.split('-').map(Number),_square$split$map2=_slicedToArray(_square$split$map,2),line=_square$split$map2[0],column=_square$split$map2[1];setInitialPosition({line:line,column:column});setBoard(function(prev){return prev.map(function(row,l){return row.map(function(col,c){if(l==line&&column==c){return{content:content,visited:true,knight:true};};return _objectSpread(_objectSpread({},col),{},{knight:false});});});});},[]);var play=function play(_ref){var line=_ref.line,column=_ref.column;var initSquare=\"\".concat(toLetter(column)).concat(line+1);var squares=resolveTour(initSquare);var result=squares.map(getMatrixPosition);var count=0;var allMoves=[];var moveKnight=function moveKnight(){allMoves.push({moveNumber:count+1,square:squares[count]});setMovements(allMoves);setKnight(result[count],count+1);if(count===result.length-1){clearInterval(myInterval);setReset(true);}else count+=1;};var myInterval=setInterval(moveKnight,500);};var cleanBoard=function cleanBoard(){setReset(false);setBoard(makeBoard);setMovements([]);setInitialPosition({line:0,column:0});setPlaying(false);};return/*#__PURE__*/_jsxs(Body,{children:[/*#__PURE__*/_jsxs(BoardBody,{children:[/*#__PURE__*/_jsx(Columns,{children:Array(8).fill('p').map(function(e,i){return/*#__PURE__*/_jsxs(\"p\",{children:[\" \",toLetter(i),\" \"]},e+i);})}),board.map(function(line,l){return/*#__PURE__*/_jsxs(Line,{children:[/*#__PURE__*/_jsx(\"p\",{children:l+1}),line.map(function(_ref2,c){var knight=_ref2.knight,content=_ref2.content;return!knight?/*#__PURE__*/_jsx(Square,{id:\"\".concat(l,\"-\").concat(c),onClick:function onClick(_ref3){var id=_ref3.target.id;return setKnight(id);},children:content},\"square \".concat((l,c))):/*#__PURE__*/_jsx(Knight,{id:\"\".concat(l,\"-\").concat(c)},\"square \".concat((l,c)));})]},\"linha \".concat(l));}),!playing?/*#__PURE__*/_jsx(BtnPlay,{disabled:playing,onClick:function onClick(){setPlaying(true);play(initialPosition);},children:\"COME\\xC7AR\"}):/*#__PURE__*/_jsx(BtnPlay,{disabled:!reset,onClick:cleanBoard,children:\"Limpar tabuleiro\"})]}),/*#__PURE__*/_jsx(MovementsContainer,{children:/*#__PURE__*/_jsx(Movements,{children:movements.map(function(_ref4){var moveNumber=_ref4.moveNumber,square=_ref4.square;return/*#__PURE__*/_jsx(Move,{children:\"\".concat(moveNumber,\"\\xB0 - \").concat(square)},\"\".concat(moveNumber).concat(square));})})})]});}export default Board;","map":{"version":3,"sources":["/home/rodrigo/rodrigoDeSouzaFernandes/projetos-pessoais/KightsTour/src/components/Board/index.js"],"names":["React","useState","useCallback","getMatrixPosition","toLetter","resolveTour","BoardBody","Square","Line","Knight","Move","Movements","Body","Columns","MovementsContainer","BtnPlay","Board","makeBoard","Array","fill","visited","knight","content","board","setBoard","line","column","initialPosition","setInitialPosition","movements","setMovements","playing","setPlaying","reset","setReset","setKnight","square","split","map","Number","prev","row","l","col","c","play","initSquare","squares","result","count","allMoves","moveKnight","push","moveNumber","length","clearInterval","myInterval","setInterval","cleanBoard","e","i","id","target"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport { getMatrixPosition, toLetter } from '../../utils/convert';\nimport resolveTour from '../../utils/resolveTour';\n\nimport { BoardBody, Square, Line, Knight, Move,\n  Movements, Body, Columns, MovementsContainer, BtnPlay } from './styled'\n\nfunction Board() {\n  const makeBoard = Array(8).fill(Array(8).fill({visited: false, knight: false, content:''}))\n  const [board, setBoard] = useState(makeBoard);\n  const [initialPosition, setInitialPosition] = useState({line: 0, column: 0});\n  const [movements, setMovements] = useState([]);\n  const [playing, setPlaying] = useState(false);\n  const [reset, setReset] = useState(false);\n\n  const setKnight = useCallback(\n    (square, content = 'x') => {\n      const [line, column] = square.split('-').map(Number);\n  \n      setInitialPosition({line, column});\n      setBoard(prev => {\n        return prev.map((row, l) => row\n        .map((col, c) => {\n          \n          if (l == line && column == c) {\n            return {\n              content,\n              visited: true,\n              knight: true,\n              };\n          };\n          return {\n            ...col,\n            knight: false,\n          };\n        }));\n      });\n    },\n    [],\n  )\n\n  const play = ({line, column}) => {\n    const initSquare = `${toLetter(column)}${line + 1}`;\n\n    const squares = resolveTour(initSquare);\n    const result = squares.map(getMatrixPosition);\n    \n    let count = 0;\n    const allMoves = [];\n\n    const  moveKnight = () => {\n      allMoves.push({ moveNumber: count + 1, square: squares[count]});\n      setMovements(allMoves);\n      setKnight(result[count], count + 1);\n      \n      if(count === result.length -1) {\n        clearInterval(myInterval);\n        setReset(true);\n      }\n      else count += 1;\n    };\n\n    const myInterval = setInterval( moveKnight , 500);\n  };\n\n  const cleanBoard = () => {\n    setReset(false);\n    setBoard(makeBoard);\n    setMovements([]);\n    setInitialPosition({line: 0, column: 0});\n    setPlaying(false);\n  };\n\n  return (\n    <Body>\n      <BoardBody >\n        <Columns>\n          {Array(8).fill('p').map((e, i) => <p key={e + i}> {toLetter(i)} </p>)}\n        </Columns>\n        {board.map((line, l) => (\n          <Line key={`linha ${l}`}>\n            <p>{l + 1}</p>\n            {line.map(({knight, content}, c) => \n              !knight ? (\n                <Square\n                  key={`square ${l, c}`}\n                  id={`${l}-${c}`}\n                  onClick={ ({target: {id}}) => setKnight(id) }\n                >\n                  {content}\n                </Square>\n                ) : (\n                  <Knight\n                    key={`square ${l, c}`}\n                    id={`${l}-${c}`}\n                  />\n                  ))}\n          </Line>))}\n          {!playing ? (\n          <BtnPlay\n            disabled={playing}\n            onClick={ () => {\n              setPlaying(true);\n              play(initialPosition);\n            } }\n            >\n            COMEÇAR\n          </BtnPlay>\n          ) : (\n          <BtnPlay\n            disabled={!reset}\n            onClick={ cleanBoard }\n          >\n          Limpar tabuleiro\n          </BtnPlay>\n          )}\n      </BoardBody>\n      <MovementsContainer>\n        <Movements>\n          {movements.map(\n            ({moveNumber, square}) => (\n            <Move key={`${moveNumber}${square}`}>\n              {`${moveNumber}° - ${square}`}\n            </Move>))}\n        </Movements>\n      </MovementsContainer>\n    </Body>\n  )\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}